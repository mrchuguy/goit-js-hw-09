{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAEpD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,IAAK,CACrC,MAAME,EAAeC,OAAOR,EAAMM,OAASL,EAAKK,MAAQD,EACxDI,QAAQC,IAAIH,GACZtB,EAAcoB,EAAI,EAAGE,GAClBI,MACC,EAACzB,SAAEA,EAAQC,MAAEA,MACXJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,GAEjE,CACE2B,QAAS,MAGZC,OACC,EAAC7B,SAAEA,EAAQC,MAAEA,MACXJ,EAAA6B,OAAOI,QAAQ,sBAAoB9B,QAAeC,MAAU,GAE9D,CACE2B,QAAS,K,CAIjBhB,EAAMK,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i++) {\n    const promiseDelay = Number(delay.value) + step.value * i;\n    console.log(promiseDelay);\n    createPromise(i + 1, promiseDelay)\n      .then(\n        ({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        },\n        {\n          timeout: 4000,\n        }\n      )\n      .catch(\n        ({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        },\n        {\n          timeout: 4000,\n        }\n      );\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","i","value","promiseDelay","Number","console","log","then","Notify","success","timeout","catch","failure","reset"],"version":3,"file":"03-promises.e2ed7c76.js.map"}